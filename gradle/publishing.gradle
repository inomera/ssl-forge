apply plugin: 'maven-publish'
apply plugin: 'signing'

def isSnapshot = false

def mavenSnapshotUrl = project.findProperty('mavenSnapshotUrl') ?: 'https://oss.sonatype.org/content/repositories/snapshots/'
def mavenReleaseUrl = project.findProperty('mavenReleaseUrl') ?: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
def mavenUsername = project.findProperty('mavenUsername') ?: 'Undefined'
def mavenPassword = project.findProperty('mavenPassword') ?: 'Undefined'

// Signing
signing {
    useInMemoryPgpKeys(file('secret.asc').text, "****")
    sign configurations.archives
}

signArchives.onlyIf { gradle.taskGraph.hasTask(publish) && !isSnapshot }

publishing {
    repositories {
        maven {
            url isSnapshot ? "${mavenSnapshotUrl}" : "${mavenReleaseUrl}"
            println("Publishing to ${url}")
            credentials {
                username "${mavenUsername}"
                println("username -> ${mavenUsername}")
                password "${mavenPassword}"
                println("password -> ${mavenPassword}")
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}

tasks.withType(GenerateModuleMetadata).configureEach {
    enabled = false
}
